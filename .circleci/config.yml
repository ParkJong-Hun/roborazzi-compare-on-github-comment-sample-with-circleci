version: 2.1

orbs:
  android: circleci/android@2.3.0
  gh: circleci/github-cli@2.3.0

machines:
  android: &android
    executor:
      name: android/android-docker
      resource-class: large
      tag: 2023.11.1

commands:
  gradle:
    parameters:
      title:
        type: string
      task:
        type: string
      # write whatever you want
      options:
        type: string
    steps:
      - run:
          name: <<parameters.title>>
          command: |
            ./gradlew <<parameters.task>> --no-daemon

  check_is_pr:
    steps:
      - run:
          name: Check if it is a PR
          command: |
            is_pr=false
            if [ -z "$CIRCLE_PULL_REQUEST" ]; then
              is_pr=true
            fi
            echo "Is this build Pull Request: $is_pr"
            echo "export IS_PR=$is_pr" >> $BASH_ENV

  determine_compare_screenshots:
    steps:
      - run:
          name: Determine compare screenshots
          command: |
            if [ $IS_PR = "true" ]; then
              echo "This is a Pull Request build"
              extra_unit_test_options="-Proborazzi.test.compare=true"
            else
              echo "This is not a Pull Request build"
            fi
            echo "
            echo "export EXTRA_UNIT_TEST_OPTIONS=extra_unit_test_options" >> $BASH_ENV

  switch_comparison_branch:
    steps:
      - run:
          # FIXME: make it work ;;
          name: Switch to comparison branch
          command: |
            git fetch origin $CIRCLE_BRANCH
            PARENT_BRANCH=$(git show-branch | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//')
            echo "Parent branch: $PARENT_BRANCH"
            BASE_COMMIT=$(git merge-base $PARENT_BRANCH $CIRCLE_BRANCH)
            echo "Base commit hash: $BASE_COMMIT"
            git reset --hard $BASE_COMMIT
            git checkout -b comparison-$CIRCLE_BRANCH
            echo "Switched to comparison branch: comparison-$CIRCLE_BRANCH"

  find_and_store_artifacts:
    parameters:
      path:
        type: string
    steps:
      - run:
          name: Find and merge roborazzi folders
          command: |
            mkdir -p $CIRCLE_BRANCH/merged/<<parameters.path>>
            find . -type d -path "./<<parameters.path>>/*" -exec cp -r {} $CIRCLE_BRANCH/merged/<<parameters.path>> \;
      - store_artifacts:
          path: $CIRCLE_BRANCH/merged/<<parameters.path>>

  set_git_config:
    steps:
      - run:
          name: Set git config
          # Set github account for comment as environment variables.
          command: |
            git config --global user.name "$GITHUB_BOT_NAME"
            git config --global user.email "$GITHUB_BOT_EMAIL"

  comment_screenshots_diff:
    steps:
      - run:
          name: Create comment
          command: |
            echo "Snapshot diff report" > comment
            echo "| File name | Image |" >> comment
            echo "|-------|-------|" >> comment
            
            files=$(find . -type f -path "*/build/outputs/roborazzi/*" -name "*_compare.png")
            for file in $files; do
              fileName=$(basename "$file" | sed -r 's/(.{20})/\1<br>/g')
              echo "| [$fileName](https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/blob/compare_$CIRCLE_BRANCH/$file) | ![](https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/blob/compare_$CIRCLE_BRANCH/$file?raw=true) |" >> comment
            done
      - run:
          name: Comment screenshots diff
          command: |
            if [ $IS_PR = "true" ]; then
              prNumber=$(echo $CIRCLE_PULL_REQUEST | sed "s:.*/::")
              url="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${prNumber}/comments"
              commentIds=$(echo -n $(curl -s -H "Authorization: token $GITHUB_ACCESS_TOKEN" $url -v | jq '.[] | select(.body | test("^Snapshot diff report.*")) | .id'))
            
              if [ -n "$commentIds" ]; then
                for commentId in $commentIds; do
                  comment="$(cat ./comment)"
                  endpoint="/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/comments/$commentId"
                  gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $endpoint -f body="$comment" ||
                  gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" $endpoint -f body="$failedComment"
                done
              else
                failedComment="$(echo -e "Snapshot diff report\n:warning: **Failed to show Snapshot diff**\n$CIRCLE_BUILD_URL")"
                gh pr comment "$CIRCLE_PULL_REQUEST" -F ./comment || gh pr comment "$CIRCLE_PULL_REQUEST" -b "$failedComment"
              fi
            fi

jobs:
  # for getting the base branch name
  sleep:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Sleep
          command: |
            echo "Sleeping for 1 minute, create pr if you want"
            sleep 60s

  #  import_artifacts:
  #    <<: *android
  #    steps:
  #      # TODO: check mode
  #      - checkout
  #      # TODO: check artifacts
  #      # TODO: if artifacts exist, import them and finish the job
  #      # TODO: else,
  #      - switch_comparison_branch
  #      - gradle:
  #          title: Record target branch screenshots
  #          task: recordRoborazziDebug
  #      # TODO: export artifacts
  #      # TODO: checkout to the original branch
  #      # TODO: import artifacts

  unit_test:
    <<: *android
    steps:
      - checkout
      - check_is_pr
      # TODO: check mode
      # TODO: import_artifacts
      - gradle:
          title: Unit test
          task: testDebugUnitTest
          options: $EXTRA_UNIT_TEST_OPTIONS
      - set_git_config
      # TODO: export artifacts
  #      - comment_screenshots_diff

  #  export_artifacts:
  #    <<: *android
  #    steps:
  #      - find_and_store_artifacts:
  #          path: app/build/outputs/roborazzi
  #      - find_and_store_artifacts:
  #          path: app/build/reports
  #      - find_and_store_artifacts:
  #          path: app/build/test-results

workflows:
  ci:
    jobs:
      - import_artifacts:
          filters:
            branches:
              only:
                - main
                - /feature\/.*/
      - unit_test:
          requires:
            - import_artifacts
          filters:
            branches:
              only:
                - main
                - /feature\/.*/
      - export_artifacts:
          requires:
            - unit_test
          filters:
            branches:
              only:
                - main
                - /feature\/.*/
        # TODO: clear old comment and write new comment on PR
        # TODO: when comparison branch's base branch(parent of the pull request) is merged or closed, delete comparison branch